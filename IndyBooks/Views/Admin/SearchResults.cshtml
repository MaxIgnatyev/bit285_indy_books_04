@model IEnumerable<IndyBooks.Models.Book>
@addTagHelper *, Microsoft.AspNetCore.Mvc.TagHelpers
@{
    ViewBag.Title = "Admin Search";
    Layout = "_Layout";
}

<h3>Search Result</h3>


<table class="table">
    <tr>
        <th>
            @Html.DisplayNameFor(model => model.Title)
        </th>
        <th>
            <!-- Use the Name property of the Book's Author entity-->
            @Html.DisplayNameFor(model => model.Author.Name)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.SKU)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.Price)
        </th>
        <th>
            Actions
        </th>
    </tr>

    @foreach (var book in Model)
    {
        <tr>
            <td>
                @book.Title
            </td>
            <td data-id="@book.Author.Id">
                <!-- Use jQuery AJAX to call our API and get the book count-->
                @book.Author.Name
            </td>
            <td class="rightedge">
                @book.SKU
            </td>
            <td class="rightedge">
                $@book.Price
            </td>
            <td>
                <a asp-action="DeleteBook" asp-controller="Admin"
                   asp-route-id="@book.Id">Remove</a>
            </td>
        </tr>
    }

</table>
<script>/*
    jQuery tooltip provides the hover effect,
    AJAX call to '/api/writer/{id}' gets the JSON data
    for the book count for the given author id
 */
$( function() {
    $( document ).tooltip({
        items:"[data-id]",
        content:function(){
            if(this.attributes.length<=2){
                var id = this.attributes["data-id"].nodeValue;
                // JSON call to our REST API route
                $.getJSON('/api/writer/bookcount/'+id, function(item) {
                    $("[data-id ="+id+"]")
                        .attr('title', 'number of books: '+ item[0].count);
                });
            }
        }
    });
 });</script>

